{"version":3,"file":"static/js/186.b3feb26d.chunk.js","mappings":"yOAgDA,UA3CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA4BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAiB9B,IAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACA,OAAnBV,GAAa,GAAMQ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOC,EAAAA,EAAAA,IAAgBtB,GAAS,KAAD,EAA1CkB,EAASC,EAAAI,KACfhB,EAAUW,GAAWC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAErBM,QAAQC,IAAGP,EAAAK,IAAM,QAEG,OAFHL,EAAAC,KAAA,GAEjBT,GAAa,GAAOQ,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAEvB,kBAViB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAWlBjB,GACF,GAAG,CAACb,IAECM,EAIL,OACEyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGvB,IAAawB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACpB7B,EAAO8B,OAAS,GACfF,EAAAA,EAAAA,KAAA,MAAAD,SACG3B,EAAO+B,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OAChCV,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAa,YACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAIO,KACZN,EAAAA,EAAAA,KAAA,KAAAD,SAAIQ,MAFGF,EAGJ,OAITL,EAAAA,EAAAA,KAAA,OAAAD,SAAK,gDAIb,C,mMC5CMS,EAAU,mCACVC,EAAW,gCAGXC,EAAiB,eAAA9B,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA4B,EAAAC,EAAAC,EAAA,OAAA/B,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACO,OAAzBwB,EAAW,GAAAG,OAAML,EAAQ,uBAAAxB,EAAAE,KAAA,EACR4B,EAAAA,EAAAA,IAAUJ,EAAa,CAC5CK,OAAQ,CACNC,QAAST,EACTU,SAAU,WAEX,KAAD,EALU,OAKVN,EAAA3B,EAAAI,KALMwB,EAAID,EAAJC,KAAI5B,EAAAkC,OAAA,SAMLN,EAAKO,SAAO,wBAAAnC,EAAAS,OAAA,GAAAX,EAAA,KACpB,kBATsB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAYjByB,EAAe,eAAAjB,GAAAvB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwC,EAAMC,GAAM,IAAAC,EAAAC,EAAAZ,EAAA,OAAA/B,IAAAA,MAAA,SAAA4C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,OACL,OAAvBqC,EAAS,GAAAV,OAAML,EAAQ,iBAAAiB,EAAAvC,KAAA,EACN4B,EAAAA,EAAAA,IAAUS,EAAW,CAC1CR,OAAQ,CACNC,QAAST,EACTmB,MAAOJ,EACPK,eAAe,EACfV,SAAU,QACVW,KAAM,KAEP,KAAD,EARU,OAQVJ,EAAAC,EAAArC,KARMwB,EAAIY,EAAJZ,KAAIa,EAAAP,OAAA,SASLN,EAAKO,SAAO,wBAAAM,EAAAhC,OAAA,GAAA4B,EAAA,KACpB,gBAZoBQ,GAAA,OAAA1B,EAAAT,MAAA,KAAAC,UAAA,KAefmC,EAAe,eAAAC,GAAAnD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAmD,EAAMnE,GAAO,IAAAoE,EAAAC,EAAAtB,EAAA,OAAA/B,IAAAA,MAAA,SAAAsD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACW,OAAxC+C,EAAU,GAAApB,OAAML,EAAQ,UAAAK,OAAShD,EAAO,KAAAsE,EAAAjD,KAAA,EACvB4B,EAAAA,EAAAA,IAAUmB,EAAY,CAC3ClB,OAAQ,CACNC,QAAST,EACTU,SAAU,WAEX,KAAD,EALU,OAKViB,EAAAC,EAAA/C,KALMwB,EAAIsB,EAAJtB,KAAIuB,EAAAjB,OAAA,SAOLN,GAAI,wBAAAuB,EAAA1C,OAAA,GAAAuC,EAAA,KACZ,gBAVoBI,GAAA,OAAAL,EAAArC,MAAA,KAAAC,UAAA,KAaf0C,EAAe,eAAAC,GAAA1D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA0D,EAAM1E,GAAO,IAAA2E,EAAAC,EAAA7B,EAAA,OAAA/B,IAAAA,MAAA,SAAA6D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,OACW,OAAxCsD,EAAU,GAAA3B,OAAML,EAAQ,UAAAK,OAAShD,EAAO,aAAA6E,EAAAxD,KAAA,EACvB4B,EAAAA,EAAAA,IAAU0B,EAAY,CAC3CzB,OAAQ,CACNC,QAAST,EACTU,SAAU,WAEX,KAAD,EALU,OAKVwB,EAAAC,EAAAtD,KALMwB,EAAI6B,EAAJ7B,KAAI8B,EAAAxB,OAAA,SAMLN,EAAK+B,MAAI,wBAAAD,EAAAjD,OAAA,GAAA8C,EAAA,KACjB,gBAToBK,GAAA,OAAAN,EAAA5C,MAAA,KAAAC,UAAA,KAYfR,EAAe,eAAA0D,GAAAjE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiE,EAAMjF,GAAO,IAAAkF,EAAAC,EAAApC,EAAA,OAAA/B,IAAAA,MAAA,SAAAoE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,OACW,OAAxC6D,EAAU,GAAAlC,OAAML,EAAQ,UAAAK,OAAShD,EAAO,aAAAoF,EAAA/D,KAAA,EACvB4B,EAAAA,EAAAA,IAAUiC,EAAY,CAC3ChC,OAAQ,CACNC,QAAST,EACTU,SAAU,QACVW,KAAM,KAEP,KAAD,EANU,OAMVoB,EAAAC,EAAA7D,KANMwB,EAAIoC,EAAJpC,KAAIqC,EAAA/B,OAAA,SAQLN,EAAKO,SAAO,wBAAA8B,EAAAxD,OAAA,GAAAqD,EAAA,KACpB,gBAXoBI,GAAA,OAAAL,EAAAnD,MAAA,KAAAC,UAAA,I","sources":["components/Reviews/Reviews.jsx","services/getMoviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/getMoviesApi';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setIsLoading(true);\n      try {\n        const getReview = await getMovieReviews(movieId);\n        setReview(getReview);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  if (!review) {\n    return;\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {review.length > 0 ? (\n        <ul>\n          {review.map(({ id, author, content }) => (\n            <li key={id}>\n              Author: <b>{author}</b>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '0df669f29ba8ead11b0550cf046b58d7';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// url: 'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\nconst getTrendingMovies = async () => {\n  const trendingUrl = `${BASE_URL}trending/movie/day?`;\n  const { data } = await axios.get(trendingUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.results;\n};\n\n// url: 'https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1',\nconst getSearchMovies = async search => {\n  const searchUrl = `${BASE_URL}search/movie?`;\n  const { data } = await axios.get(searchUrl, {\n    params: {\n      api_key: API_KEY,\n      query: search,\n      include_adult: false,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data.results;\n};\n\n// url: 'https://api.themoviedb.org/3/movie/movie_id?language=en-US',\nconst getMovieDetails = async movieId => {\n  const detailsUrl = `${BASE_URL}movie/${movieId}?`;\n  const { data } = await axios.get(detailsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n//  url: 'https://api.themoviedb.org/3/movie/movie_id/credits?language=en-US',\nconst getMovieCredits = async movieId => {\n  const creditsUrl = `${BASE_URL}movie/${movieId}/credits?`;\n  const { data } = await axios.get(creditsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\n//  url: 'https://api.themoviedb.org/3/movie/movie_id/reviews?language=en-US&page=1',\nconst getMovieReviews = async movieId => {\n  const reviewsUrl = `${BASE_URL}movie/${movieId}/reviews?`;\n  const { data } = await axios.get(reviewsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","review","setReview","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","getReview","_context","prev","next","getMovieReviews","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","length","map","_ref2","id","author","content","API_KEY","BASE_URL","getTrendingMovies","trendingUrl","_yield$axios$get","data","concat","axios","params","api_key","language","abrupt","results","getSearchMovies","_callee2","search","searchUrl","_yield$axios$get2","_context2","query","include_adult","page","_x","getMovieDetails","_ref3","_callee3","detailsUrl","_yield$axios$get3","_context3","_x2","getMovieCredits","_ref4","_callee4","creditsUrl","_yield$axios$get4","_context4","cast","_x3","_ref5","_callee5","reviewsUrl","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}